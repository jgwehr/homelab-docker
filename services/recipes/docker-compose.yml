name: "recipes"

services:

####################
# Tandoor Recipes
####################

  tandoor:
    container_name: tandoor
    image: vabene1111/recipes:latest

    depends_on:
      tandoor_db:
        condition: service_healthy
    
    networks:
      - caddy-net # provides access for the reverse proxy
      - tandoor-net

    ports:
      - ${PORT_TANDOOR}:8080

    env_file:
      - ./staticconfig/tandoor.env

    environment:
      TZ: ${TZ}

    labels:
      - diun.enable=true
      - homepage.group=Lifestyle
      - homepage.name=Recipes and Meal Planning
      - homepage.href=http://${EXTERNAL_TANDOOR}.${DOMAIN}
      - homepage.icon=tandoor-recipes
      - homepage.widget.type=tandoor
      - homepage.widget.url=http://${SERVER_URL}:${PORT_TANDOOR}
      - homepage.widget.key={HOMEPAGE_TANDOOR_API}

    volumes:
      - ${STATICDIR}/tandoor_media:/opt/recipes/mediafiles

    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
    restart: unless-stopped

  tandoor_db:
    container_name: tandoor_db
    image: postgres:15.4-alpine

    networks:
      - tandoor-net

    env_file:
      - ./staticconfig/tandoor.env

    labels:
      - homepage.group=Back End
      - homepage.name=Tandoor | Postgres DB
      - homepage.icon=postgres

    volumes:
      - ${DBDIR}/tandoor_db:/var/lib/postgresql/data

    healthcheck:
      interval: 60s
      retries: 10
      test:
        - CMD
        - pg_isready
        - '-q'
        - '-d'
        - ${TANDOOR_DB_NAME}
        - '-U'
        - ${TANDOOR_DB_USER}
      timeout: 45s
      
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 128M
    restart: unless-stopped

networks:
  caddy-net:
    name: caddy-net
    external: true
  tandoor-net:
    name: tandoor-net