name: "downloads"

services:

####################
# Downloaders and VPN
####################

  gluetun:
    container_name: gluetun
    image: ghcr.io/qdm12/gluetun:v3.39.0
    
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}

      VPN_SERVICE_PROVIDER: ${VPN_SERVICE_PROVIDER}
      OPENVPN_USER: ${VPN_USER}
      OPENVPN_PASSWORD: ${VPN_PASSWORD}

      # ProtonVPN Port Forwarding, see https://github.com/qdm12/gluetun-wiki/blob/main/setup/providers/protonvpn.md
      PORT_FORWARD_ONLY: 'on'
      VPN_PORT_FORWARDING: 'on'
      SERVER_HOSTNAMES: ${VPN_HOSTNAMES}

    ports:
      - ${PORT_GLUETUN_CONTROL}:8000
      - ${PORT_TORRENT_UI}:8080
      - ${PORT_PROWLARR_UI}:9696
      - ${PORT_SONARR_UI}:8989
      - ${PORT_RADARR_UI}:7878
      - ${PORT_LIDARR_UI}:8686

    labels:
      - homepage.group=Back End
      - homepage.name=VPN for Downloads
      - homepage.icon=gluetun
      - homepage.weight=100
      - homepage.widget.type=gluetun
      - homepage.widget.url=http://${SERVER_URL}:${PORT_GLUETUN_CONTROL}

    devices:
      - /dev/net/tun:/dev/net/tun

    volumes:
      - ${CONFIGDIR}/gluetun:/gluetun

    cap_add:
      - NET_ADMIN
    
    restart: unless-stopped

  prowlarr:
    container_name: prowlarr
    image: lscr.io/linuxserver/prowlarr:develop

    depends_on:
      gluetun:
        condition: service_healthy
      qbittorrent:
        condition: service_started

    network_mode: service:gluetun # ONLY provide network config in the gluetun container

    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}

    labels:
      - diun.enable=true
      - homepage.group=Downloads
      - homepage.name=Indexers
      - homepage.icon=prowlarr
      - homepage.href=http://${SERVER_URL}:${PORT_PROWLARR_UI}
      - homepage.weight=1000
      - homepage.widget.type=prowlarr
      - homepage.widget.url=http://${SERVER_URL}:${PORT_PROWLARR_UI}
      - homepage.widget.key=${HOMEPAGE_PROWLARR_API}
      
    volumes:
      - ${CONFIGDIR}/prowlarr:/config

    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 600M
    restart: unless-stopped
  
  qbittorrent:
    container_name: qbittorrent
    image: ghcr.io/linuxserver/qbittorrent

    depends_on:
      gluetun:
        condition: service_healthy

    network_mode: service:gluetun # ONLY provide network config in the gluetun container

    environment:
        PUID: ${PUID}
        PGID: ${PGID}
        TZ: ${TZ}
        UMASK_SET: 022
        WEBUI_PORT: 8080

    labels:
      - diun.enable=true
      - homepage.group=Downloads
      - homepage.name=Torrents
      - homepage.icon=qbittorrent
      - homepage.href=http://${SERVER_URL}:${PORT_TORRENT_UI}
      - homepage.weight=900
      - homepage.widget.type=qbittorrent
      - homepage.widget.url=http://${SERVER_URL}:${PORT_TORRENT_UI}
      - homepage.widget.username=${HOMEPAGE_QBITTORRENT_USERNAME}
      - homepage.widget.password=${HOMEPAGE_QBITTORRENT_PASSWORD}

    volumes:
        - ${CONFIGDIR}/qbt:/config
        - ${DOWNLOADDIR}:/data/downloads
    
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
    restart: unless-stopped

####################
# Media Managers
####################
  
  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr

    depends_on:
      prowlarr:
        condition: service_started
      gluetun:
        condition: service_healthy

    network_mode: service:gluetun # ONLY provide network config in the gluetun container

    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}

    labels:
      - diun.enable=true
      - homepage.group=Downloads
      - homepage.name=Music
      - homepage.icon=lidarr
      - homepage.href=http://${SERVER_URL}:${PORT_LIDARR_UI}
      - homepage.weight=503

    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIGDIR}/lidarr:/config
      - ${DATADIR}:/data
    
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
    restart: unless-stopped
  
  radarr:
    container_name: radarr
    image: ghcr.io/linuxserver/radarr:latest
    
    depends_on:
      prowlarr:
        condition: service_started
      gluetun:
        condition: service_healthy

    network_mode: service:gluetun # ONLY provide network config in the gluetun container

    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}

    labels:
      - diun.enable=true
      - homepage.group=Downloads
      - homepage.name=Movies
      - homepage.icon=radarr
      - homepage.href=http://${SERVER_URL}:${PORT_RADARR_UI}
      - homepage.weight=501
      - homepage.widget.type=radarr
      - homepage.widget.url=http://${SERVER_URL}:${PORT_RADARR_UI}
      - homepage.widget.key=${HOMEPAGE_RADARR_API}

    volumes:
        - /etc/localtime:/etc/localtime:ro
        - ${CONFIGDIR}/radarr3:/config
        - ${DATADIR}:/data
    
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
    restart: unless-stopped

  sonarr:
    container_name: sonarr
    image: ghcr.io/linuxserver/sonarr:latest

    depends_on:
      prowlarr:
        condition: service_started
      gluetun:
        condition: service_healthy

    network_mode: service:gluetun # ONLY provide network config in the gluetun container

    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}

    labels:
      - diun.enable=true
      - homepage.group=Downloads
      - homepage.name=TV Shows
      - homepage.icon=sonarr
      - homepage.href=http://${SERVER_URL}:${PORT_SONARR_UI}
      - homepage.weight=502
      - homepage.widget.type=sonarr
      - homepage.widget.url=http://${SERVER_URL}:${PORT_SONARR_UI}
      - homepage.widget.key=${HOMEPAGE_SONARR_API}

    volumes:
        - /etc/localtime:/etc/localtime:ro
        - ${CONFIGDIR}/sonarr:/config
        - ${DATADIR}:/data
    
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
    restart: unless-stopped

  podgrab:
    container_name: podgrab
    image: ghcr.io/akhilrex/podgrab:latest

    ports:
      - ${PORT_PODGRAB}:8080

    environment:
      - CHECK_FREQUENCY=1800

    labels:
      - homepage.group=Media
      - homepage.name=Podgrab
      - homepage.href=http://${SERVER_URL}:${PORT_PODGRAB}
      - homepage.description=Podcast manager/downloader/archiver tool to download podcast episodes
      - homepage.weight=800

    volumes:
        - /etc/localtime:/etc/localtime:ro
        - ${CONFIGDIR}/podgrab:/config
        - ${MEDIADIR}/podcasts:/assets

    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
    restart: unless-stopped

####################
# YouTube Downloader
####################

  metube:
    container_name: metube
    image: ghcr.io/alexta69/metube:latest

    environment:
      UID: ${PUID}
      GID: ${PGID}
      TZ: ${TZ}

      # There are quite a lot of interesting config options: https://github.com/alexta69/metube
    
    ports:
      - ${PORT_YOUTUBE}:8081

    labels:
      - diun.enable=true
      - homepage.group=Downloads
      - homepage.name=Youtube Downloader
      - homepage.icon=metube
      - homepage.weight=1000
      - homepage.href=http://${SERVER_URL}:${PORT_YOUTUBE}


    volumes:
      - ${DOWNLOADDIR}/youtube:/downloads

    restart: unless-stopped

####################
# Helpers
####################

  gluetun-qbittorrent-port-manager:
    container_name: gluetun_port_manager
    build:
      context: ./dockerfiles
      dockerfile: port_manager.dockerfile #Custom build

    depends_on:
      gluetun:
        condition: service_healthy
      qbittorrent:
        condition: service_started

    environment:
      QBITTORRENT_SERVER: ${SERVER_URL} # IP Address of qbittorrent
      QBITTORRENT_PORT: ${PORT_TORRENT_UI}
      QBITTORRENT_USER: ${HOMEPAGE_QBITTORRENT_USERNAME} # username
      QBITTORRENT_PASS: ${HOMEPAGE_QBITTORRENT_PASSWORD} # password

      GLUETUN_HOST: ${SERVER_URL} # IP or FQDN of gluetun control server
      GLUETUN_PORT: ${PORT_GLUETUN_CONTROL} # port of gluetun control server

      RECHECK_TIME: 600 # number of seconds between checks to gluetun server for port

    restart: unless-stopped
    