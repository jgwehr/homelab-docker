name: "media-streaming"

services:

####################
# Jellyfin
####################

  jellyfin:
    container_name: jellyfin
    image: jellyfin/jellyfin:latest
      
    user: ${PUID}:${PGID}
    group_add:
      - ${GID_HARDWAREACC} # gid of your `render` group

    networks:
      - htpc-net
      - caddy-net # provides access for the reverse proxy
    
    ports:
      - ${PORT_HTPC_HTTP}:8096 #HTTP webUI
      - ${PORT_HTPC_HTTPS}:8920 #HTTPS webUI
      - ${PORT_HTPC_LOCAL}:7359/udp #optional. Allows clients to discover Jellyfin on the local network.
      - ${PORT_HTPC_DLNA}:1900/udp #optional. Service discovery used by DNLA and clients.

    environment:
      TZ: ${TZ}
      JELLYFIN_PublishedServerUrl: ${SERVER_URL}:${PORT_HTPC_HTTP} #optional. The Server URL to publish in udp Auto Discovery response.

    labels:
      - diun.enable=true
      - homepage.group=Media
      - homepage.name=Jellyfin
      - homepage.icon=jellyfin
      - homepage.href=http://${SERVER_URL}:${PORT_HTPC_HTTP}
      - homepage.weight=100
      - homepage.widget.type=jellyfin
      - homepage.widget.url=http://${SERVER_URL}:${PORT_HTPC_HTTP}
      - homepage.widget.key=${HOMEPAGE_JELLYFIN_API}

    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128 # VAAPI
      - /dev/dri/card0:/dev/dri/card0

    volumes:
      - ${CONFIGDIR}/jellyfin:/config
      - ${CACHEDIR}/jellyfin:/cache
      - ${MEDIADIR}:/media:ro #naming, etc all handled by *arr apps
    
    #deploy:
    #  resources:
    #    limits:
    #      cpus: '2'
    #      memory: 1024M
    restart: unless-stopped



networks:
  caddy-net:
    name: caddy-net
    external: true
  htpc-net:
    name: htpc-net
    external: true